// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// TodosAnalyze implements Todos_analyze operation.
	//
	// Analyze a Todo.
	//
	// POST /todos/{id}/analyze
	TodosAnalyze(ctx context.Context, params TodosAnalyzeParams) (*AnalyzeResult, error)
	// TodosCreate implements Todos_create operation.
	//
	// Create a Todo.
	//
	// POST /todos
	TodosCreate(ctx context.Context, req *Todo) (*Todo, error)
	// TodosDelete implements Todos_delete operation.
	//
	// Delete a Todo.
	//
	// DELETE /todos/{id}
	TodosDelete(ctx context.Context, params TodosDeleteParams) error
	// TodosList implements Todos_list operation.
	//
	// List todos.
	//
	// GET /todos
	TodosList(ctx context.Context) (*TodoList, error)
	// TodosRead implements Todos_read operation.
	//
	// Read todos.
	//
	// GET /todos/{id}
	TodosRead(ctx context.Context, params TodosReadParams) (*Todo, error)
	// TodosUpdate implements Todos_update operation.
	//
	// Update a Todo.
	//
	// PATCH /todos/{id}
	TodosUpdate(ctx context.Context, req *TodoUpdate, params TodosUpdateParams) (*Todo, error)
	// NewError creates *ErrorStatusCode from error returned by handler.
	//
	// Used for common default response.
	NewError(ctx context.Context, err error) *ErrorStatusCode
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h Handler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		baseServer: s,
	}, nil
}
